    <meta http-equiv="Content-Security-Policy" content="default-src * 'unsafe-inline' 'unsafe-eval' data: blob:; script-src * 'unsafe-inline' 'unsafe-eval'; script-src-elem * 'unsafe-inline' 'unsafe-eval'; style-src * 'unsafe-inline'; style-src-elem * 'unsafe-inline'; img-src * data: blob:; font-src *; connect-src * wss: ws:; frame-src *; object-src 'none';">\n<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
 <!-- SEO-Optimized Meta Tags for Maximum Organic Traffic -->
<meta name="title" content="Free Form Submission Service - 500 Monthly Submissions | SnapItForms - Better Than Formspree & Netlify Forms">

<meta name="description" content="SnapItForms: The #1 free form submission service with 500 monthly submissions, instant email notifications, advanced analytics, and webhook integrations. 
No backend coding required! Cheaper and more powerful than Formspree, Netlify Forms, and TypeForm. Start with our generous free tier - includes contact forms, surveys, and order forms. 
9 pricing plans from $0 to enterprise. Perfect for developers, agencies, and businesses. Setup in 2 minutes with our drag-and-drop form builder.">

<meta name="keywords" content="free form submission service, form backend API, no code forms, contact form handler, form processing service, HTML form backend, JavaScript form submission, serverless forms, static site forms, 
form to email service, webhook forms, form analytics, best Formspree alternative, Netlify Forms alternative, TypeForm alternative, JotForm alternative, Wufoo alternative, Google Forms alternative, free contact form, form builder, 
drag and drop forms, survey forms, order forms, feedback forms, lead generation forms, email capture forms, newsletter signup forms, event registration forms, job application forms, customer feedback forms, product order forms, 
appointment booking forms, contact us forms, inquiry forms, quote request forms, demo request forms, trial signup forms, webinar registration forms, form validation, form security, spam protection, GDPR compliant forms, mobile responsive forms, 
custom form styling, form integrations, Zapier integration, Slack integration, email automation, form notifications, real-time analytics, form conversion tracking, A/B testing forms, multi-step forms, conditional logic forms, file upload forms, payment forms, 
subscription forms, marketing forms, sales forms, support forms, HR forms, application forms, registration forms, booking forms, reservation forms, evaluation forms, assessment forms, poll forms, voting forms, petition forms, donation forms, volunteer forms, membership forms, 
contest forms, giveaway forms, quiz forms, calculator forms, estimate forms, pricing forms, custom forms, white label forms, branded forms, embed forms, popup forms, modal forms, inline forms, floating forms, sticky forms, exit intent forms, timed forms, geo-targeted forms, device-specific forms, 
browser-specific forms, campaign forms, landing page forms, website forms, blog forms, e-commerce forms, CMS forms, WordPress forms, Shopify forms, Squarespace forms, Wix forms, Webflow forms, React forms, Vue forms, Angular forms, jQuery forms, Bootstrap forms, 
HTML5 forms, CSS3 forms, responsive design forms, mobile-first forms, progressive web app forms, single page application forms, headless forms, API-first forms, microservice forms, cloud forms, secure forms, encrypted forms, PCI compliant forms, HIPAA compliant forms, SOC 2 compliant forms, 
enterprise forms, business forms, startup forms, agency forms, freelancer forms, developer forms, designer forms, marketer forms, sales team forms, support team forms, HR team forms, operations team forms, product team forms, engineering team forms, finance team forms, legal team forms, compliance team forms, 
security team forms, IT team forms, customer success forms, account management forms, project management forms, task management forms, workflow forms, automation forms, integration forms, collaboration forms, communication forms, reporting forms, dashboard forms, admin forms, user forms, customer forms, client forms, vendor forms, partner forms, 
affiliate forms, referral forms">
    <!-- Canonical URL -->
    <link rel="canonical" href="https://snapitforms.com">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://snapitforms.com">
    <meta property="og:title" content="Free Form Submission Service | SnapItForms - No Backend Required">
    <meta property="og:description" content="Free form submission handling for HTML forms. Get 500 free submissions monthly. No backend coding required. Set up in 2 minutes with email notifications and analytics.">
    <meta property="og:image" content="https://snapitforms.com/snapit-forms-og-image.png">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="630">
    <meta property="og:site_name" content="SnapItForms">
    <meta property="og:locale" content="en_US">
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content="https://snapitforms.com">
    <meta property="twitter:title" content="Free Form Submission Service | SnapItForms - No Backend Required">
    <meta property="twitter:description" content="Free form submission handling for HTML forms. Get 500 free submissions monthly. No backend coding required. Set up in 2 minutes with email notifications and analytics.">
    <meta property="twitter:image" content="https://snapitforms.com/images/snapitforms-twitter-og-banner.png">
    <meta property="twitter:creator" content="@SnapItForms">
    <meta property="twitter:site" content="@SnapItForms">
    
    <!-- Additional SEO Meta Tags -->
    <meta name="robots" content="index, follow, max-snippet:-1, max-video-preview:-1, max-image-preview:large">
    <meta name="googlebot" content="index, follow">
    <meta name="bingbot" content="index, follow">
    <meta name="language" content="English">
    <meta name="revisit-after" content="7 days">
    <meta name="rating" content="General">
    <meta name="distribution" content="global">
    <meta name="copyright" content="SnapItForms">
    
    <!-- Geo Meta Tags -->
    <meta name="geo.region" content="US">
    <meta name="geo.placename" content="United States">
    <meta name="ICBM" content="39.8283, -98.5795">
    
    <!-- Article/Business Meta Tags -->
    <meta name="author" content="SnapItForms">
    <meta name="publisher" content="SnapItForms">
    <meta name="application-name" content="SnapItForms">
    <meta name="theme-color" content="#aa336a">
    <meta name="msapplication-TileColor" content="#aa336a">
    
    <!-- Mobile Meta Tags -->
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="SnapItForms">
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="manifest" href="/site.webmanifest">
    
    <!-- Preconnect for Performance -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://accounts.google.com">
    <link rel="dns-prefetch" href="https://dnxslxuth3.execute-api.us-east-1.amazonaws.com">
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Google Identity Services -->
    <script src="https://accounts.google.com/gsi/client" async defer></script>
        
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://accounts.google.com">
    <link rel="preconnect" href="https://dnxslxuth3.execute-api.us-east-1.amazonaws.com">
    
    <!-- CSS -->
    <link rel="stylesheet" href="css/landingstyles.css">
    <link rel="stylesheet" href="css/formsmain.css">
    <link rel="stylesheet" href="css/formsstyles.css">
    <link rel="stylesheet" href="css/formsui.css">
    <link rel="stylesheet" href="css/formslanding.css">
    <link rel="stylesheet" href="css/responsive.css">
    <link rel="stylesheet" href="css/formsmobile.css">
    <link rel="stylesheet" href="css/components.css">
    <link rel="stylesheet" href="css/layout.css">
    <!-- Structured Data (JSON-LD) -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "SoftwareApplication",
      "name": "SnapItForms",
      "url": "https://snapitforms.com",
      "description": "Free form submission handling service for HTML forms. No backend coding required. Set up in 2 minutes with email notifications and analytics.",
      "applicationCategory": "WebApplication",
      "operatingSystem": "Web Browser",
      "offers": [
        {
          "@type": "Offer",
          "name": "Free Plan",
          "price": "0",
          "priceCurrency": "USD",
          "description": "Free plan with 500 submissions per month"
        },
        {
          "@type": "Offer",
          "name": "Starter Plan",
          "price": "2.99",
          "priceCurrency": "USD",
          "description": "Starter plan with 1,000 submissions per month"
        },
        {
          "@type": "Offer",
          "name": "Basic Plan",
          "price": "4.99",
          "priceCurrency": "USD",
          "description": "Basic plan with 2,500 submissions per month"
        },
        {
          "@type": "Offer",
          "name": "Premium Plan",
          "price": "9.99",
          "priceCurrency": "USD",
          "description": "Premium plan with 5,000 submissions per month"
        },
        {
          "@type": "Offer",
          "name": "Pro Plan",
          "price": "14.99",
          "priceCurrency": "USD",
          "description": "Pro plan with 25,000 submissions per month"
        },
        {
          "@type": "Offer",
          "name": "Business Plan",
          "price": "29.99",
          "priceCurrency": "USD",
          "description": "Business plan with 75,000 submissions per month"
        },
        {
          "@type": "Offer",
          "name": "Enterprise Plan",
          "price": "59.99",
          "priceCurrency": "USD",
          "description": "Enterprise plan with 300,000 submissions per month"
        },
        {
          "@type": "Offer",
          "name": "Scale Plan",
          "price": "99.99",
          "priceCurrency": "USD",
          "description": "Scale plan with 1,000,000 submissions per month"
        },
        {
          "@type": "Offer",
          "name": "Unlimited Plan",
          "price": "199.99",
          "priceCurrency": "USD",
          "description": "Unlimited plan with 2,500,000 submissions per month"
        }
      ],
      "provider": {
        "@type": "Organization",
        "name": "SnapItForms",
        "url": "https://snapitforms.com",
        "logo": "https://snapitforms.com/images/snapit-logo.png"
      },
      "featureList": [
        "500 free form submissions per month",
        "Email notifications",
        "No backend coding required",
        "2-minute setup",
        "Form analytics",
        "Spam protection",
        "Custom redirect URLs",
        "9 pricing tiers from free to enterprise",
        "Up to 2.5 million submissions per month"
      ],
      "screenshot": "https://snapitforms.com/images/snapitforms-screenshot.png",
      "aggregateRating": {
        "@type": "AggregateRating",
        "ratingValue": "4.8",
        "ratingCount": "127",
        "bestRating": "5",
        "worstRating": "1"
      }
    }
    </script>
    
    <!-- FAQ Schema -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "FAQPage",
      "mainEntity": [
        {
          "@type": "Question",
          "name": "How much does SnapItForms cost?",
          "acceptedAnswer": {
            "@type": "Answer",
            "text": "SnapItForms offers a free plan with 500 submissions per month. Paid plans start at $2.99/month for 1,000 submissions (Starter) and scale up to $199.99/month for 2.5 million submissions (Unlimited). We have 9 different plans to fit every need and budget."
          }
        },
        {
          "@type": "Question",
          "name": "Do I need backend coding knowledge?",
          "acceptedAnswer": {
            "@type": "Answer",
            "text": "No! SnapItForms requires zero backend coding. Simply add your access key to any HTML form and we handle the rest."
          }
        },
        {
          "@type": "Question",
          "name": "How quickly can I set up form submission?",
          "acceptedAnswer": {
            "@type": "Answer",
            "text": "Setup takes just 2 minutes. Sign up, get your access key, and add it to your HTML form. No server configuration required."
          }
        },
        {
          "@type": "Question",
          "name": "What features are included in the free plan?",
          "acceptedAnswer": {
            "@type": "Answer",
            "text": "The free plan includes 500 submissions per month, email notifications, basic analytics, and spam protection."
          }
        }
      ]
    }
    </script>
    
    <!-- Content Security Policy to allow Google Auth and all necessary resources -->
    
    
    <!-- Cross-Origin-Opener-Policy for Google OAuth -->
    <meta http-equiv="Cross-Origin-Opener-Policy" content="same-origin-allow-popups">

</head>
<body>
    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="loading-overlay" style="display: none;">
        <div class="loading-spinner"></div>
        <p>Processing your request...</p>
    </div>

    <!-- Navigation -->
    <nav class="navbar" role="navigation" aria-label="Main navigation">
        <div class="nav-container">
            <div class="nav-logo">
                <h1>SnapItForms</h1>
            </div>
            <div class="nav-menu">
                <a href="form-generator.html" class="nav-link">Form Generator</a>
                <a href="templates.html" class="nav-link">Templates</a>
                <a href="#features" class="nav-link">Features</a>
                <a href="#how-it-works" class="nav-link">How It Works</a>
                <a href="#pricing" class="nav-link">Pricing</a>
                <button id="signInBtn" class="btn btn-primary" aria-label="Sign in to get started">Get Started</button>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <section class="hero" aria-labelledby="hero-title">
        <div class="hero-container">
            <div class="hero-content">
                <h1 id="hero-title" class="hero-title">Build forms that work, without all the work</h1>
                <p class="hero-subtitle">SnapItForms handles your form submissions, email notifications, and data storage automatically. Just add your access key and you're done.</p>
                <div class="hero-cta">
                    <div id="googleSignInButton" class="google-signin-wrapper" aria-label="Sign up with Google"></div>
                    <p class="cta-text">Get started free • No credit card required</p>
                </div>
                <div class="hero-actions">
                    <button id="browseTemplatesBtn" class="btn btn-outline" onclick="openTemplateGallery()">
                        <span class="icon">🎨</span>
                        Browse Templates
                    </button>
                    <button id="createFormBtn" class="btn btn-secondary" onclick="openFormGenerator()" style="display: none;">
                        <span class="icon">✏️</span>
                        Create Form
                    </button>
                </div>
            </div>
            <div class="hero-visual">
                <div class="code-preview">
                    <div class="code-header">
                        <span class="code-title">Your form in seconds</span>
                    </div>
                    <div class="code-content">
                        <code>&lt;form action="https://api.snapitforms.com/submit" method="POST"&gt;
  &lt;input type="hidden" name="access_key" value="YOUR_KEY"&gt;
  &lt;input type="text" name="name" required&gt;
  &lt;input type="email" name="email" required&gt;
  &lt;textarea name="message" required&gt;&lt;/textarea&gt;
  &lt;button type="submit"&gt;Submit&lt;/button&gt;
&lt;/form&gt;</code>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section id="features" class="features" aria-labelledby="features-title">
        <div class="container">
            <div class="section-header">
                <h2 id="features-title">Built for scale</h2>
                <h3>Everything you need for form handling</h3>
                <p>SnapItForms fits seamlessly into your workflow — make building and scaling forms easier without learning new frameworks or tools.</p>
            </div>
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon" aria-hidden="true">🔧</div>
                    <h4>No Backend Required</h4>
                    <p>Point your form to our endpoint and start collecting submissions immediately. No server setup needed.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon" aria-hidden="true">📧</div>
                    <h4>Email Notifications</h4>
                    <p>Get instant email notifications when someone submits your form. Custom templates and subjects supported.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon" aria-hidden="true">📊</div>
                    <h4>Analytics Dashboard</h4>
                    <p>Track submissions, monitor usage, and analyze form performance with our comprehensive dashboard.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon" aria-hidden="true">🔒</div>
                    <h4>Secure & Reliable</h4>
                    <p>Enterprise-grade security with spam protection, data validation, and 99.9% uptime guarantee.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- How It Works Section -->
    <section id="how-it-works" class="how-it-works" aria-labelledby="how-it-works-title">
        <div class="container">
            <div class="section-header">
                <h2 id="how-it-works-title">How it works</h2>
                <p>Get your forms working in three simple steps</p>
            </div>
            <div class="steps-grid">
                <div class="step">
                    <div class="step-number" aria-hidden="true">1</div>
                    <h4>Sign up & get your key</h4>
                    <p>Create your free account and get your unique access key instantly.</p>
                </div>
                <div class="step">
                    <div class="step-number" aria-hidden="true">2</div>
                    <h4>Choose a template or build from scratch</h4>
                    <p>Select from 15+ professional templates or create your own custom form.</p>
                </div>
                <div class="step">
                    <div class="step-number" aria-hidden="true">3</div>
                    <h4>Start receiving submissions</h4>
                    <p>That's it! Your forms now work automatically with email notifications and data storage.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Pricing Section with 9 Tiers -->
    <section class="pricing" id="pricing" aria-labelledby="pricing-title">
        <div class="container">
            <div class="section-header">
                <h2 id="pricing-title">PRICING</h2>
                <h3>Choose Your Perfect Plan</h3>
                <p>Start free and scale as you grow. No hidden fees, cancel anytime.</p>
            </div>
            
            <div class="pricing-grid-all" id="pricingGrid">
                <!-- Pricing cards will be generated by JavaScript -->
            </div>
        </div>
    </section>

    <!-- Form Templates Section -->
    <section class="form-templates" aria-labelledby="templates-title">
        <div class="container">
            <div class="section-header">
                <h2 id="templates-title">Professional Form Templates</h2>
                <p>Start with professionally designed templates and customize them to match your brand. All templates are mobile-responsive and include your access key automatically.</p>
            </div>
            
            <!-- Quick Template Preview -->
            <div class="templates-preview">
                <div class="template-card featured-template" onclick="useTemplate('contact')" role="button" tabindex="0" aria-label="Contact Form Template">
                    <div class="template-header">
                        <div class="template-icon" aria-hidden="true">📧</div>
                        <div class="template-badge popular">Most Popular</div>
                    </div>
                    <div class="template-content">
                        <h3>Contact Form</h3>
                        <p>Perfect for customer inquiries and support requests</p>
                        <div class="template-features">
                            <span>Name & Email</span>
                            <span>Message Area</span>
                            <span>Mobile Ready</span>
                        </div>
                    </div>
                </div>
                
                <div class="template-card featured-template" onclick="useTemplate('survey')" role="button" tabindex="0" aria-label="Survey Form Template">
                    <div class="template-header">
                        <div class="template-icon" aria-hidden="true">📊</div>
                        <div class="template-badge">Popular</div>
                    </div>
                    <div class="template-content">
                        <h3>Customer Survey</h3>
                        <p>Gather valuable customer feedback and insights</p>
                        <div class="template-features">
                            <span>Rating Fields</span>
                            <span>Multiple Choice</span>
                            <span>Analytics Ready</span>
                        </div>
                    </div>
                </div>
                
                <div class="template-card featured-template" onclick="useTemplate('order')" role="button" tabindex="0" aria-label="Order Form Template">
                    <div class="template-header">
                        <div class="template-icon" aria-hidden="true">🛒</div>
                        <div class="template-badge">E-commerce</div>
                    </div>
                    <div class="template-content">
                        <h3>Order Form</h3>
                        <p>Simple product ordering and e-commerce form</p>
                        <div class="template-features">
                            <span>Product Selection</span>
                            <span>Quantities</span>
                            <span>Order Tracking</span>
                        </div>
                    </div>
                </div>
                
                <div class="template-card featured-template" onclick="useTemplate('registration')" role="button" tabindex="0" aria-label="Event Registration Template">
                    <div class="template-header">
                        <div class="template-icon" aria-hidden="true">🎫</div>
                        <div class="template-badge">Events</div>
                    </div>
                    <div class="template-content">
                        <h3>Event Registration</h3>
                        <p>Perfect for events, workshops, and conferences</p>
                        <div class="template-features">
                            <span>Personal Details</span>
                            <span>Event Preferences</span>
                            <span>Payment Ready</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Browse All Templates Button -->
            <div class="template-gallery-cta">
                <div class="template-card template-gallery-card" onclick="openTemplateGallery()" role="button" tabindex="0">
                    <div class="template-icon">🎨</div>
                    <div class="template-content">
                        <h3>Browse All Templates</h3>
                        <p>15+ professional templates across all categories</p>
                        <div class="template-count">Business • Marketing • E-commerce • Events & More</div>
                    </div>
                    <div class="template-arrow">→</div>
                </div>
            </div>
        </div>
    </section>

    <!-- CTA Section -->
    <section class="cta" aria-labelledby="cta-title">
        <div class="container">
            <div class="cta-content">
                <h2 id="cta-title">Ready to start receiving form submissions?</h2>
                <p>Join thousands of developers who trust SnapItForms for their form handling needs.</p>
                <div id="ctaSignInButton" class="google-signin-wrapper" aria-label="Sign up to get started"></div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer" role="contentinfo">
        <div class="container">
            <div class="footer-content">
                <div class="footer-brand">
                    <h3>SnapItForms</h3>
                    <p>The easiest way to handle form submissions without a backend.</p>
                </div>
                <div class="footer-links">
                    <div class="footer-column">
                        <h4>Product</h4>
                        <ul>
                            <li><a href="#features">Features</a></li>
                            <li><a href="#pricing">Pricing</a></li>
                            <li><a href="templates.html">Templates</a></li>
                            <li><a href="form-generator.html">Form Generator</a></li>
                            <li><a href="/dashboard.html">Dashboard</a></li>
                        </ul>
                    </div>
                    <div class="footer-column">
                        <h4>Support</h4>
                        <ul>
                            <li><a href="support.html">Help</a></li>
                            <li><a href="documentation.html">Documentation</a></li>
                            <li><a href="status.html">Status</a></li>
                            <li><a href="privacy-policy.html">Privacy Policy</a></li>
                            <li><a href="terms.html">Terms of Service</a></li>
                            <li><a href="contact.html">Contact</a></li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2025 SnapItForms. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Success Modal -->
<div id="successModal" class="modal" role="dialog" aria-labelledby="success-modal-title" aria-hidden="true">
    <div class="modal-content">
        <div class="modal-header">
            <h3 id="success-modal-title">Success! Your account is ready</h3>
            <button class="modal-close" aria-label="Close modal">&times;</button>
        </div>
        <div class="modal-body">
            <p>Your access key: <strong id="accessKeyDisplay">YOUR_ACCESS_KEY</strong></p>
            <div class="code-example">
                <pre><code id="generatedCode"><!-- Code will be generated here --></code></pre>
            </div>
            <div class="modal-actions">
                <button id="copyCodeBtn" class="btn btn-secondary">Copy Code</button>
                <button id="dashboardBtn" class="btn btn-primary">Go to Dashboard</button>
                <!-- Fixed: Changed ID and added onclick handler -->
                <button id="createFormModalBtn" class="btn btn-outline" onclick="openFormGenerator()">Create Form</button>
                <button id="browseTemplatesModalBtn" class="btn btn-outline">Browse Templates</button>
            </div>
        </div>
    </div>
</div>

    <!-- Error Modal -->
    <div id="errorModal" class="modal" role="dialog" aria-labelledby="error-modal-title" aria-hidden="true">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="error-modal-title">Something went wrong</h3>
                <button class="modal-close" aria-label="Close modal">&times;</button>
            </div>
            <div class="modal-body">
                <p id="errorModalMessage">Please try again or contact support if the problem persists.</p>
                <div class="modal-actions">
                    <button class="modal-close btn btn-secondary">Close</button>
                    <button id="retryBtn" class="btn btn-primary">Try Again</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Production JavaScript -->
    <script>
        // Configuration - Production settings
        const CONFIG = {
            API_BASE_URL: 'https://api.snapitforms.com',
            GOOGLE_CLIENT_ID: "242648112266-iglul54tuis9mhucsp1pmpqg0a48l8i0.apps.googleusercontent.com",
            STRIPE_PUBLISHABLE_KEY: "pk_test_51RUcFYEpdWEENcj1aolZN1F2rYi3mz9oq4qZNPAGUrlIlu8LNBKiP1SGGZ048Ee9xCmAPCCfYEhrzof5fX9vPAxU00tmqsZqQd",
            FRONTEND_URL: 'https://snapitforms.com',
            PRICING_TIERS: {
                free: { 
                    limit: 500, 
                    price: 0, 
                    name: 'Free',
                    description: 'Get started in seconds at NO cost',
                    features: [
                        '500 submissions per month',
                        'Email notifications',
                        'Basic analytics',
                        'Community support',
                        'SnapItForms branding'
                    ]
                },
                starter: { 
                    limit: 1000, 
                    price: 2.99, 
                    name: 'Starter',
                    description: 'Personal projects and startups',
                    features: [
                        '1,000 submissions per month',
                        'Remove SnapItForms branding',
                        'Email notifications',
                        'Form analytics',
                        'Email support'
                    ]
                },
                basic: { 
                    limit: 2500, 
                    price: 4.99, 
                    name: 'Basic',
                    description: 'Perfect for small businesses',
                    features: [
                        '2,500 submissions per month',
                        'Everything in Starter',
                        'Priority support',
                        'Custom thank you pages',
                        'Form validation'
                    ]
                },
                premium: { 
                    limit: 5000, 
                    price: 9.99, 
                    name: 'Premium',
                    description: 'Ideal for small, medium,growing businesses',
                    featured: true,
                    features: [
                        '5,000 submissions per month',
                        'Everything in Basic',
                        'Webhook integrations',
                        'CSV export',
                        'Custom email templates'
                    ]
                },
                pro: { 
                    limit: 25000, 
                    price: 14.99, 
                    name: 'Pro',
                    description: 'For established businesses',
                    features: [
                        '25,000 submissions per month',
                        'Everything in Premium',
                        'Advanced analytics',
                        'API access',
                    ]
                },
                business: { 
                    limit: 75000, 
                    price: 29.99, 
                    name: 'Business',
                    description: 'For large organizations',
                    features: [
                        '75,000 submissions per month',
                        'Everything in Pro',
                        'Custom domains',
                        'Advanced integrations'
                    ]
                },
                enterprise: { 
                    limit: 300000, 
                    price: 59.99, 
                    name: 'Enterprise',
                    description: 'For enterprise scale',
                    features: [
                        '300,000 submissions per month',
                        'Everything in Business',
                        'White-label options',
                        'SLA guarantee',
                        'Dedicated account manager'
                    ]
                },
                scale: { 
                    limit: 1000000, 
                    price: 99.99, 
                    name: 'Scale',
                    description: 'High-volume operations',
                    features: [
                        '1,000,000 submissions per month',
                        'Everything in Enterprise',
                        'Priority infrastructure',
                        'Advanced analytics',
                        'Custom integrations',
                        'Performance monitoring'
                    ]
                },
                unlimited: { 
                    limit: 2500000, 
                    price: 199.99, 
                    name: 'Unlimited',
                    description: 'Maximum capacity',
                    features: [
                        '2,500,000 submissions per month',
                        'Everything in Scale',
                        '24/7 phone support',
                        'Custom SLA agreements',
                        'Advanced compliance features',
                        'Dedicated infrastructure'
                    ]
                }
            }
        };

        // State management
        let appState = {
            isLoading: false,
            currentUser: null,
            retryCount: 0,
            maxRetries: 3
        };

        // Utility functions
        const utils = {
            showLoading: (show = true) => {
                const overlay = document.getElementById('loadingOverlay');
                overlay.style.display = show ? 'flex' : 'none';
                appState.isLoading = show;
            },

            showModal: (modalId) => {
                const modal = document.getElementById(modalId);
                modal.style.display = 'flex';
                modal.setAttribute('aria-hidden', 'false');
                // Focus management for accessibility
                const firstButton = modal.querySelector('button');
                if (firstButton) firstButton.focus();
            },

            hideModal: (modalId) => {
                const modal = document.getElementById(modalId);
                // Remove focus from any element in the modal before hiding
                const focusedElement = modal.querySelector(':focus');
                if (focusedElement) {
                    focusedElement.blur();
                }
                modal.style.display = 'none';
                modal.setAttribute('aria-hidden', 'true');
            },

            showNotification: (message, type = 'info', duration = 5000) => {
                const notification = document.createElement('div');
                notification.className = `notification notification-${type}`;
                notification.style.cssText = `
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    padding: 16px 20px;
                    border-radius: 8px;
                    color: white;
                    font-weight: 500;
                    z-index: 10000;
                    max-width: 400px;
                    transform: translateX(100%);
                    transition: transform 0.3s ease;
                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
                `;
                
                const colors = {
                    success: '#10b981',
                    error: '#ef4444',
                    warning: '#f59e0b',
                    info: '#3b82f6'
                };
                
                notification.style.background = colors[type] || colors.info;
                notification.textContent = message;
                notification.setAttribute('role', 'alert');
                notification.setAttribute('aria-live', 'assertive');
                
                document.body.appendChild(notification);
                
                // Animate in
                requestAnimationFrame(() => {
                    notification.style.transform = 'translateX(0)';
                });
                
                // Auto remove
                setTimeout(() => {
                    notification.style.transform = 'translateX(100%)';
                    setTimeout(() => {
                        if (notification.parentNode) {
                            notification.parentNode.removeChild(notification);
                        }
                    }, 300);
                }, duration);
                
                return notification;
            },

            copyToClipboard: async (text, button) => {
                try {
                    await navigator.clipboard.writeText(text);
                    const originalText = button.textContent;
                    button.textContent = 'Copied!';
                    button.disabled = true;
                    setTimeout(() => {
                        button.textContent = originalText;
                        button.disabled = false;
                    }, 2000);
                    return true;
                } catch (err) {
                    // Fallback for older browsers
                    const textArea = document.createElement('textarea');
                    textArea.value = text;
                    textArea.style.position = 'fixed';
                    textArea.style.left = '-9999px';
                    document.body.appendChild(textArea);
                    textArea.focus();
                    textArea.select();
                    
                    try {
                        const successful = document.execCommand('copy');
                        document.body.removeChild(textArea);
                        if (successful) {
                            const originalText = button.textContent;
                            button.textContent = 'Copied!';
                            setTimeout(() => button.textContent = originalText, 2000);
                        }
                        return successful;
                    } catch (fallbackErr) {
                        document.body.removeChild(textArea);
                        utils.showNotification('Copy failed. Please select and copy manually.', 'error');
                        return false;
                    }
                }
            },

            debounce: (func, wait) => {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }
        };

        // API functions
        const api = {
            async register(token) {
                const response = await fetch(`${CONFIG.API_BASE_URL}/register/google`, {
                    method: 'POST',
                    headers: { 
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ token })
                });
                
                if (!response.ok) {
                    const errorText = await response.text();
                    throw new Error(`Registration failed: ${response.status} - ${errorText}`);
                }
                
                return response.json();
            },

            async createCheckoutSession(accessKey, tier) {
                const response = await fetch(`${CONFIG.API_BASE_URL}/create-checkout-session`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ accessKey, tier })
                });
                
                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    throw new Error(errorData.message || `Checkout failed: ${response.status}`);
                }
                
                return response.json();
            }
        };

        // Template and Form Generator functions
        function openTemplateGallery() {
            const accessKey = localStorage.getItem('accessKey') || 
                             new URLSearchParams(window.location.search).get('key');
            
            if (accessKey) {
                utils.showNotification('Opening template gallery...', 'info');
                window.location.href = `/templates.html?key=${accessKey}`;
            } else {
                utils.showNotification('Please sign in first to access templates!', 'info');
                setTimeout(() => {
                    if (typeof google !== 'undefined') {
                        google.accounts.id.prompt();
                    } else {
                        utils.showNotification('Google Sign-In not available. Please refresh and try again.', 'error');
                    }
                }, 1500);
            }
        }

        function openFormGenerator(template = null) {
            const accessKey = localStorage.getItem('accessKey') || 
                             new URLSearchParams(window.location.search).get('key');
            
            if (accessKey) {
                utils.showNotification('Opening form generator...', 'info');
                const url = template ? 
                    `/form-generator.html?key=${accessKey}&template=${template}` : 
                    `/form-generator.html?key=${accessKey}`;
                window.location.href = url;
            } else {
                utils.showNotification('Please sign in first to use the form generator!', 'info');
                setTimeout(() => {
                    if (typeof google !== 'undefined') {
                        google.accounts.id.prompt();
                    } else {
                        utils.showNotification('Google Sign-In not available. Please refresh and try again.', 'error');
                    }
                }, 1500);
            }
        }

        function useTemplate(templateKey) {
            const accessKey = localStorage.getItem('accessKey') || 
                             new URLSearchParams(window.location.search).get('key');
            
            if (accessKey) {
                utils.showNotification(`Loading ${templateKey} template...`, 'info');
                window.location.href = `/form-generator.html?key=${accessKey}&template=${templateKey}`;
            } else {
                utils.showNotification('Please sign in first to use templates!', 'info');
                setTimeout(() => {
                    if (typeof google !== 'undefined') {
                        google.accounts.id.prompt();
                    } else {
                        utils.showNotification('Google Sign-In not available. Please refresh and try again.', 'error');
                    }
                }, 1500);
            }
        }

        // Google Sign-In handling
        function handleGoogleSignIn(response) {
            if (!response || !response.credential) {
                utils.showNotification('Google sign-in failed. Please try again.', 'error');
                return;
            }

            utils.showLoading(true);
            
            api.register(response.credential)
                .then(data => {
                    utils.showLoading(false);
                    const accessKey = data.user?.accessKey || data.accessKey;
                    if (accessKey) {
                        localStorage.setItem('accessKey', accessKey);
                        showSuccessModal(accessKey);
                        utils.showNotification('Account created successfully!', 'success');
                        updateUIForSignedInUser(accessKey);
                    } else {
                        throw new Error('No access key received');
                    }
                })
                .catch(error => {
                    utils.showLoading(false);
                    console.error('Registration error:', error);
                    
                    let errorMessage = 'Registration failed. Please try again.';
                    if (error.message.includes('Network') || error.message.includes('fetch')) {
                        errorMessage = 'Network error. Please check your connection and try again.';
                    } else if (error.message.includes('401') || error.message.includes('403')) {
                        errorMessage = 'Authentication failed. Please try signing in again.';
                    }
                    
                    utils.showNotification(errorMessage, 'error');
                    
                    // Show error modal for persistent errors
                    const errorModal = document.getElementById('errorModalMessage');
                    if (errorModal) {
                        errorModal.textContent = errorMessage;
                        utils.showModal('errorModal');
                    }
                });
        }

        // Update UI when user is signed in
        function updateUIForSignedInUser(accessKey) {
            // Update navigation
            const signInBtn = document.getElementById('signInBtn');
            if (signInBtn) {
                signInBtn.textContent = 'Dashboard';
                signInBtn.onclick = () => {
                    window.location.href = `/dashboard.html?key=${accessKey}`;
                };
            }

            // Show create form button in hero
            const createFormBtn = document.getElementById('createFormBtn');
            if (createFormBtn) {
                createFormBtn.style.display = 'inline-flex';
            }

            // Add templates navigation
            const navMenu = document.querySelector('.nav-menu');
            if (navMenu && !document.querySelector('.nav-link[href="templates.html"]')) {
                const templatesLink = document.createElement('a');
                templatesLink.href = `templates.html?key=${accessKey}`;
                templatesLink.className = 'nav-link';
                templatesLink.textContent = 'Templates';
                navMenu.insertBefore(templatesLink, signInBtn);
            }
        }

        // Pricing functions
        async function handlePricingClick(tier) {
            if (appState.isLoading) return;

            const accessKey = localStorage.getItem('accessKey');
            
            if (tier === 'free') {
                if (!accessKey) {
                    // Trigger Google sign-in for free tier
                    if (typeof google !== 'undefined') {
                        google.accounts.id.prompt();
                    } else {
                        utils.showNotification('Google Sign-In not available. Please refresh and try again.', 'error');
                    }
                } else {
                    // Already have account, go to dashboard
                    window.location.href = `/dashboard.html?key=${accessKey}`;
                }
                return;
            }

            // For paid tiers
            if (!accessKey) {
                utils.showNotification('Please sign up first to choose a paid plan.', 'info');
                setTimeout(() => {
                    if (typeof google !== 'undefined') {
                        google.accounts.id.prompt();
                    }
                }, 1500);
                return;
            }

            // Create checkout session for other paid tiers
            try {
                utils.showLoading(true);
                const data = await api.createCheckoutSession(accessKey, tier);
                utils.showLoading(false);
                
                if (data.url) {
                    utils.showNotification('Redirecting to checkout...', 'info');
                    window.location.href = data.url;
                } else {
                    throw new Error('No checkout URL received');
                }
            } catch (error) {
                utils.showLoading(false);
                console.error('Checkout error:', error);
                utils.showNotification(error.message || 'Failed to start checkout. Please try again.', 'error');
            }
        }

        // Success modal
        function showSuccessModal(accessKey) {
            const modal = document.getElementById('successModal');
            const accessKeyDisplay = document.getElementById('accessKeyDisplay');
            const generatedCode = document.getElementById('generatedCode');

            accessKeyDisplay.textContent = accessKey;
            
            const codeSnippet = `<form action="${CONFIG.API_BASE_URL}/submit" method="POST">
  <input type="hidden" name="access_key" value="${accessKey}">
  <input type="text" name="name" placeholder="Your Name" required>
  <input type="email" name="email" placeholder="Your Email" required>
  <textarea name="message" placeholder="Your Message" required></textarea>
  <button type="submit">Submit</button>
</form>`;

            generatedCode.textContent = codeSnippet;
            utils.showModal('successModal');
        }

        // Generate pricing cards
        function generatePricingCards() {
            const pricingGrid = document.getElementById('pricingGrid');
            if (!pricingGrid) return;

            pricingGrid.innerHTML = '';
            
            const tierOrder = ['free', 'starter', 'basic', 'premium', 'pro', 'business', 'enterprise', 'scale', 'unlimited'];
            
            tierOrder.forEach(tierKey => {
                const tier = CONFIG.PRICING_TIERS[tierKey];
                if (!tier) return;

                const card = document.createElement('div');
                card.className = 'pricing-card';
                
                if (tier.featured) {
                    card.classList.add('featured');
                }

                let buttonText = 'Get Started';
                let buttonClass = 'pricing-btn btn-primary';
                
                if (tierKey === 'free') {
                    buttonText = 'Start Free';
                }

                card.innerHTML = `
                    ${tier.featured ? '<div class="pricing-badge">Most Popular</div>' : ''}
                    <div class="pricing-header">
                        <h4>${tier.name}</h4>
                        <div class="price">${tier.price}<span>/month</span></div>
                        <p class="pricing-description">${tier.description}</p>
                    </div>
                    <ul class="pricing-features">
                        ${tier.features.map(feature => `<li>${feature}</li>`).join('')}
                    </ul>
                    <button class="${buttonClass}" 
                            onclick="handlePricingClick('${tierKey}')"
                            data-tier="${tierKey}"
                            aria-label="Choose ${tier.name} plan">
                        ${buttonText}
                    </button>
                `;

                pricingGrid.appendChild(card);
            });
        }

        // Event listeners setup
        function setupEventListeners() {
            // Modal close handlers
            document.addEventListener('click', (e) => {
                if (e.target.classList.contains('modal-close')) {
                    const modal = e.target.closest('.modal');
                    if (modal) {
                        modal.style.display = 'none';
                        modal.setAttribute('aria-hidden', 'true');
                    }
                }
                
                if (e.target.classList.contains('modal')) {
                    e.target.style.display = 'none';
                    e.target.setAttribute('aria-hidden', 'true');
                }
            });

            // Copy code button
            const copyCodeBtn = document.getElementById('copyCodeBtn');
            if (copyCodeBtn) {
                copyCodeBtn.addEventListener('click', () => {
                    const code = document.getElementById('generatedCode').textContent;
                    utils.copyToClipboard(code, copyCodeBtn);
                });
            }

            // Dashboard button
            const dashboardBtn = document.getElementById('dashboardBtn');
            if (dashboardBtn) {
                dashboardBtn.addEventListener('click', () => {
                    const accessKey = localStorage.getItem('accessKey');
                    if (accessKey) {
                        window.location.href = `/dashboard.html?key=${accessKey}`;
                    }
                });
            }

            // Create form button in modal
 const createFormModalBtn = document.getElementById('createFormModalBtn');
    if (createFormModalBtn) {
        createFormModalBtn.addEventListener('click', () => {
            openFormGenerator();
        });
    }

            // Browse templates button in modal
            const browseTemplatesModalBtn = document.getElementById('browseTemplatesModalBtn');
            if (browseTemplatesModalBtn) {
                browseTemplatesModalBtn.addEventListener('click', () => {
                    openTemplateGallery();
                });
            }

            // Retry button
            const retryBtn = document.getElementById('retryBtn');
            if (retryBtn) {
                retryBtn.addEventListener('click', () => {
                    utils.hideModal('errorModal');
                    if (appState.retryCount < appState.maxRetries) {
                        appState.retryCount++;
                        // Retry last action
                        if (typeof google !== 'undefined') {
                            google.accounts.id.prompt();
                        }
                    }
                });
            }

            // Navigation sign-in button
            const signInBtn = document.getElementById('signInBtn');
            if (signInBtn) {
                signInBtn.addEventListener('click', () => {
                    if (typeof google !== 'undefined') {
                        google.accounts.id.prompt();
                    } else {
                        utils.showNotification('Google Sign-In not available. Please refresh the page.', 'error');
                    }
                });
            }

            // Smooth scrolling for navigation links
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });
                    }
                });
            });

            // Navbar scroll effect
            const navbar = document.querySelector('.navbar');
            if (navbar) {
                window.addEventListener('scroll', utils.debounce(() => {
                    if (window.scrollY > 100) {
                        navbar.style.background = 'rgba(255, 248, 240, 0.98)';
                        navbar.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.1)';
                        navbar.style.backdropFilter = 'blur(10px)';
                    } else {
                        navbar.style.background = 'rgba(255, 248, 240, 0.95)';
                        navbar.style.boxShadow = 'none';
                        navbar.style.backdropFilter = 'none';
                    }
                }, 16));
            }

            // Template cards keyboard accessibility
            document.querySelectorAll('.template-card, .featured-template').forEach(card => {
                card.addEventListener('keydown', (e) => {
                    if (e.key === 'Enter' || e.key === ' ') {
                        e.preventDefault();
                        card.click();
                    }
                });
            });

            // Error handling for images and external resources
            document.querySelectorAll('img').forEach(img => {
                img.addEventListener('error', () => {
                    img.style.display = 'none';
                });
            });

            // Accessibility improvements
            document.addEventListener('keydown', (e) => {
                // Escape key closes modals
                if (e.key === 'Escape') {
                    const openModal = document.querySelector('.modal[style*="flex"]');
                    if (openModal) {
                        openModal.style.display = 'none';
                        openModal.setAttribute('aria-hidden', 'true');
                    }
                }
            });
        }

        // Google Sign-In initialization
        function initializeGoogleSignIn() {
            if (typeof google !== 'undefined') {
                try {
                    google.accounts.id.initialize({
                        client_id: CONFIG.GOOGLE_CLIENT_ID,
                        callback: handleGoogleSignIn,
                        auto_select: false,
                        cancel_on_tap_outside: true
                    });

                    // Render sign-in buttons
                    const googleSignInButton = document.getElementById("googleSignInButton");
                    const ctaSignInButton = document.getElementById("ctaSignInButton");
                    
                    if (googleSignInButton) {
                        google.accounts.id.renderButton(
                            googleSignInButton,
                            { 
                                theme: "filled_blue", 
                                size: "large", 
                                text: "signup_with", 
                                width: 250,
                                logo_alignment: "left"
                            }
                        );
                    }

                    if (ctaSignInButton) {
                        google.accounts.id.renderButton(
                            ctaSignInButton,
                            { 
                                theme: "filled_blue", 
                                size: "large", 
                                text: "signup_with", 
                                width: 250,
                                logo_alignment: "left"
                            }
                        );
                    }
                } catch (error) {
                    console.error('Google Sign-In initialization error:', error);
                    utils.showNotification('Sign-in service temporarily unavailable. Please try again later.', 'warning');
                }
            } else {
                console.warn('Google Sign-In library not loaded');
                // Retry loading after a delay
                setTimeout(initializeGoogleSignIn, 2000);
            }
        }

        // Performance optimizations
        function optimizePerformance() {
            // Lazy load images below the fold
            if ('IntersectionObserver' in window) {
                const imageObserver = new IntersectionObserver((entries, observer) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            const img = entry.target;
                            if (img.dataset.src) {
                                img.src = img.dataset.src;
                                img.removeAttribute('data-src');
                                imageObserver.unobserve(img);
                            }
                        }
                    });
                });

                document.querySelectorAll('img[data-src]').forEach(img => {
                    imageObserver.observe(img);
                });
            }

            // Prefetch critical resources
            const prefetchLinks = [
                '/dashboard.html',
                '/form-generator.html',
                '/templates.html',
                '/css/billing-styles.css'
            ];

            prefetchLinks.forEach(href => {
                const link = document.createElement('link');
                link.rel = 'prefetch';
                link.href = href;
                document.head.appendChild(link);
            });
        }

        // Analytics and tracking (placeholder)
        function initializeAnalytics() {
            // Track pricing card interactions
            document.addEventListener('click', (e) => {
                if (e.target.closest('.pricing-btn')) {
                    const tier = e.target.getAttribute('data-tier');
                    console.log('Pricing interaction:', tier);
                    // Add your analytics tracking here
                }
            });

            // Track form template interactions
            document.addEventListener('click', (e) => {
                if (e.target.closest('.template-card') || e.target.closest('.featured-template')) {
                    console.log('Template card clicked');
                    // Add your analytics tracking here
                }
            });
        }

        // Error boundary and global error handling
        window.addEventListener('error', (e) => {
            console.error('Global error:', e.error);
            if (!appState.isLoading) {
                utils.showNotification('Something went wrong. Please refresh the page if the problem persists.', 'error');
            }
        });

        window.addEventListener('unhandledrejection', (e) => {
            console.error('Unhandled promise rejection:', e.reason);
            if (!appState.isLoading) {
                utils.showNotification('A network error occurred. Please check your connection.', 'error');
            }
        });

        // Main initialization
        document.addEventListener('DOMContentLoaded', () => {
            console.log('SnapItForms initialized');
            
            // Initialize all components
            generatePricingCards();
            setupEventListeners();
            optimizePerformance();
            initializeAnalytics();
            
            // Check for existing user
            const existingKey = localStorage.getItem('accessKey');
            if (existingKey) {
                updateUIForSignedInUser(existingKey);
            }

            // Set loading state to false
            appState.isLoading = false;
        });

        // Initialize Google Sign-In when the library loads
        window.onload = initializeGoogleSignIn;

        // Make functions globally available
        window.handlePricingClick = handlePricingClick;
        window.handleGoogleSignIn = handleGoogleSignIn;
        window.showSuccessModal = showSuccessModal;
        window.openTemplateGallery = openTemplateGallery;
        window.openFormGenerator = openFormGenerator;
        window.useTemplate = useTemplate;
        
        // Service Worker registration for PWA capabilities (optional)
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/sw.js')
                    .then(registration => {
                        console.log('SW registered: ', registration);
                    })
                    .catch(registrationError => {
                        console.log('SW registration failed: ', registrationError);
                    });
            });
        }
    </script>

    <!-- Structured Data for SEO -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "SoftwareApplication",
        "name": "SnapItForms",
        "description": "No-code form submission service with 9 pricing tiers, email notifications, and advanced analytics",
        "url": "https://snapitforms.com",
        "applicationCategory": "DeveloperApplication",
        "operatingSystem": "Web Browser",
        "offers": {
            "@type": "AggregateOffer",
            "lowPrice": "0",
            "highPrice": "199.99",
            "priceCurrency": "USD",
            "offerCount": "9"
        },
        "creator": {
            "@type": "Organization",
            "name": "SnapItForms"
        }
    }
    </script>
</body>
</html>